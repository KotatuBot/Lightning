{"remainingRequest":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kotatu/TOOL/Lightning/lightning-front/src/components/SourceView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/kotatu/TOOL/Lightning/lightning-front/src/components/SourceView.vue","mtime":1574688042878},{"path":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kotatu/TOOL/Lightning/lightning-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb2RlbGluZXsKCgl0ZXh0LWFsaWduOiBsZWZ0OwoJcGFkZGluZy1sZWZ0OiA1JTsKICAgICAgICBwYWRkaW5nLWJvdHRvbTogLTEwMHB4OwoJd2lkdGg6IDUwMHB4OwogICAgICAgIGhlaWdodDogMyU7Cgp9Cg=="},{"version":3,"sources":["SourceView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"SourceView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"sourceview\">\n                        <h3> SoureTEST</h3>\n\t\t\t<tr v-for=\"code in codeview\" v-bind:key=\"code.id\">\n\t\t\t\t<td v-on:click=\"onwrite(code.id)\">{{code.id}}</td>\n\t\t\t\t<td class=\"codeline\">{{ code.content }}</td>\n                                <div v-if=\"code.mflag\">\n                                        <button v-on:click=\"display_memo(code.id)\">+</button>\n                                </div>\n\t\t\t</tr>\n\t\t<hr/>\n\t\t<button v-on:click=\"data_send\">Send</button>\n\n\n                <div v-if=\"flag\" class=\"codeline\">\n\t\t\t<div>\n\t\t\t\t<textarea name=\"comment\" cols=\"30\" rows=\"5\" v-model=\"message\"></textarea>\t\n                                <button v-on:click=\"adding_memo(currentnumber)\" class=\"btn btn-secondary\">Send</button>\n\t\t\t</div>\n                \n                </div>\n\n                <div>\n                        <div v-for=\"code in codeview\" v-bind:key=\"code.id\">\n\n                                <div v-if=\"code.dflag\">\n                                        <div class=\"codeline\">\n                                                <h3>{{code.id}} line</h3>\n                                                <hr>\n                                                <p>{{code.message}}</p>\n                                        </div>\n\n                                </div>\n\n\n                        </div>\n                </div>\n\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceView',\n  data: function(){\n          return{\n\t\tcodeview: [],\n                currentnumber: 0,\n                message: '',\n                writeing_memo: [],\n                flag: false,\n                \n          }\n  },\n\n methods: {\n\n\tdata_send: function(event){\n\tif(event){\n\n\t\tvar code_data = \"<?php\\n\\ngila::controller('blog', 'blog/controllers/blog', 'Blog');\\n\";\n\t\tvar code_list = code_data.split('\\n');\n\n\t\tfor (var number=0;number<code_list.length;number++){\n\n\t\t\tvar tmp = {id:number,content:code_list[number],flag:false,message:'',mflag:false,dflag:false}\n\t\t\tthis.codeview.push(tmp)\n\t\t}\n\n\t}\n\n\t},\n\n        onwrite: function(code){\n                for (var number=0;number<this.codeview.length;number++){\n\n                        if (code===this.codeview[number].id){\n\n                               this.flag = true;\n\t\t\t\tthis.currentnumber = code;\n                                \n                             }\n\t\t}\n        },\n\n        adding_memo: function(index){\n\n                for(var j=0;j<this.codeview.length;j++){\n                        if(j===index){\n                               this.codeview[j].mflag = true;\n                               this.codeview[j].message = this.message;\n                        }       \n                        \n                 }\n\n                var tmp = {}\n                tmp['id']=index\n                tmp['memo']=this.message;\n                this.writeing_memo.push(tmp)\n                this.message = \"\";\n                this.flag = false;\n                \n        },\n\n        display_memo: function(index){\n                for(var s=0;s<this.codeview.length;s++){\n                        if(s===index){\n\n                               if(this.codeview[s].dflag==false){\n                                        this.codeview[s].dflag = true;\n                               }else{\n                                       \n                                        this.codeview[s].dflag = false;        \n                               }\n                        }       \n                        \n                 }\n                \n        }\n\t\n\n },\n\n}\n</script>\n<style>\n.codeline{\n\n\ttext-align: left;\n\tpadding-left: 5%;\n        padding-bottom: -100px;\n\twidth: 500px;\n        height: 3%;\n\n}\n</style>\n"]}]}